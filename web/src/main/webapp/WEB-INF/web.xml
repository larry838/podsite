<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">
	<!-- 处理XSS 的提交表单 Forms加上：<spring:htmlEscape defaultHtmlEscape="true" /> -->
	<context-param>
		<param-name>defaultHtmlEscape</param-name>
		<param-value>true</param-value>
	</context-param>
		<!-- 配置spring的log4j监听 -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>6000</param-value>
	</context-param>
	
	<!-- 区分项目名称，防止默认重名 -->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>podsite_web.root</param-value>
	</context-param>

	<!-- 设置Spring容器加载配置文件路径 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring/spring-applicationContext.xml</param-value>
	</context-param>

	<!-- Spring的log4j监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
    <!-- 加载Spring容器配置 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

    <!-- 防止内存泄露 -->  
    <listener>  
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>  
   </listener> 


	<!-- 字符集 过滤器 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 配置SpringMVC核心控制view分发器 -->  
	<servlet>
		<servlet-name>springMvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring/spring-mvc.xml</param-value>
		</init-param>
		 <!-- 启动加载一次 -->
		<load-on-startup>1</load-on-startup>
	</servlet>
	<!--为DispatcherServlet建立映射 --> 
	<servlet-mapping>
		<servlet-name>springMvc</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<!-- 不同的servlet容器/应用服务器,处理静态资源的servlet名字不太一样， Tomcat、Jetty、JBoss、GlassFish：默认Servlet名字为"default" 
			Googe App Engine：默认Servlet名字为"_ah_default" Resin：默认Servlet名字为"resin-file" 
			Weblogic：默认Servlet名字为"FileServlet" WebSphere：默认Servlet名字为"SimpleFileServlet" -->
		<servlet-name>default</servlet-name>
		<url-pattern>/resources/*</url-pattern>
	</servlet-mapping>


	<welcome-file-list>
		<welcome-file>/login.jsp</welcome-file>
	</welcome-file-list>

	<!-- 未捕获异常的处理 -->
	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/WEB-INF/views/error/error.jsp</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/WEB-INF/views/error/error-404.jsp</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/WEB-INF/views/error/error-500.jsp</location>
	</error-page>
	<error-page>  
        <exception-type>org.apache.shiro.session.InvalidSessionException</exception-type>  
        <location>/invalidSession.jsp</location>  
    </error-page>
	<!-- 配置jstl标签库为本地加载 -->
	<jsp-config>
		<taglib>
			<taglib-uri>http://java.sun.com/jsp/jstl/core</taglib-uri>
			<taglib-location>/WEB-INF/tlds/c.tld</taglib-location>
		</taglib>
		<taglib>
			<taglib-uri>http://java.sun.com/jsp/jstl/fmt</taglib-uri>
			<taglib-location>/WEB-INF/tlds/fmt.tld</taglib-location>
		</taglib>
		<taglib>
			<taglib-uri>http://java.sun.com/jsp/jstl/fn</taglib-uri>
			<taglib-location>/WEB-INF/tlds/fn.tld</taglib-location>
		</taglib>
	</jsp-config>
	 <!-- session有效时间 -->
	<session-config>
		<session-timeout>60</session-timeout>
	</session-config>

</web-app>